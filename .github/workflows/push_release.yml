on: 
  push:
    branches:
      - master

jobs:
  release-on-push:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - id: release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: minor
          tag_prefix: v
          
      - name: Check Output Parameters
        run: |
          echo "Got tag name ${{ steps.release.outputs.tag_name }}"
          echo "Got release version ${{ steps.release.outputs.version }}"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19.0-beta.1'

      - name: Build Admin dashboard UI
        run: npm --prefix=./ui ci && npm --prefix=./ui run build

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: --snapshot

      - name: Get release info
        id: fetch-latest-release
        uses: thebritican/fetch-latest-release@v2.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  
         
      - name: Upload artifact ARM-Linux
        id: upload-release-asset-arm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.fetch-latest-release.outputs.upload_url }}
          asset_path: dist/pocketbase_linux_arm64/pocketbase
          asset_name: pocketbase-${{ steps.release.outputs.tag_name }}_arm
          asset_content_type: application/binary
         
      - name: Upload artifact AMD-Linux
        id: upload-release-asset-amd
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.fetch-latest-release.outputs.upload_url }}
          asset_path: dist/pocketbase_linux_amd64_v1/pocketbase
          asset_name: pocketbase-${{ steps.release.outputs.tag_name }}_amd
          asset_content_type: application/binary
